{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/powershell.js","webpack:///./node_modules/highlight.js/lib/languages/powershell.js.js"],"names":["powershell","hljs","TYPES","VALID_VERBS","COMPARISON_OPERATORS","KEYWORDS","$pattern","keyword","built_in","TITLE_NAME_RE","BACKTICK_ESCAPE","begin","relevance","VAR","className","variants","LITERAL","QUOTE_STRING","end","contains","APOS_STRING","PS_HELPTAGS","PS_COMMENT","inherit","COMMENT","CMDLETS","concat","PS_CLASS","beginKeywords","excludeEnd","TITLE_MODE","PS_FUNCTION","returnBegin","PS_USING","PS_ARGUMENTS","HASH_SIGNS","PS_METHODS","toString","replace","endsParent","GENTLEMANS_SET","NUMBER_MODE","PS_TYPE","excludeBegin","join","unshift","name","aliases","case_insensitive","keywords","module","exports","emitWarning","warned","console","log"],"mappings":"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","file":"js/chunk-0e9cef5b.281fa6f9.js","sourcesContent":["/*\nLanguage: PowerShell\nDescription: PowerShell is a task-based command-line shell and scripting language built on .NET.\nAuthor: David Mohundro <david@mohundro.com>\nContributors: Nicholas Blumhardt <nblumhardt@nblumhardt.com>, Victor Zhou <OiCMudkips@users.noreply.github.com>, Nicolas Le Gall <contact@nlegall.fr>\nWebsite: https://docs.microsoft.com/en-us/powershell/\n*/\n\nfunction powershell(hljs) {\n  const TYPES = [\n    \"string\",\n    \"char\",\n    \"byte\",\n    \"int\",\n    \"long\",\n    \"bool\",\n    \"decimal\",\n    \"single\",\n    \"double\",\n    \"DateTime\",\n    \"xml\",\n    \"array\",\n    \"hashtable\",\n    \"void\"\n  ];\n\n  // https://docs.microsoft.com/en-us/powershell/scripting/developer/cmdlet/approved-verbs-for-windows-powershell-commands\n  const VALID_VERBS =\n    'Add|Clear|Close|Copy|Enter|Exit|Find|Format|Get|Hide|Join|Lock|' +\n    'Move|New|Open|Optimize|Pop|Push|Redo|Remove|Rename|Reset|Resize|' +\n    'Search|Select|Set|Show|Skip|Split|Step|Switch|Undo|Unlock|' +\n    'Watch|Backup|Checkpoint|Compare|Compress|Convert|ConvertFrom|' +\n    'ConvertTo|Dismount|Edit|Expand|Export|Group|Import|Initialize|' +\n    'Limit|Merge|Mount|Out|Publish|Restore|Save|Sync|Unpublish|Update|' +\n    'Approve|Assert|Build|Complete|Confirm|Deny|Deploy|Disable|Enable|Install|Invoke|' +\n    'Register|Request|Restart|Resume|Start|Stop|Submit|Suspend|Uninstall|' +\n    'Unregister|Wait|Debug|Measure|Ping|Repair|Resolve|Test|Trace|Connect|' +\n    'Disconnect|Read|Receive|Send|Write|Block|Grant|Protect|Revoke|Unblock|' +\n    'Unprotect|Use|ForEach|Sort|Tee|Where';\n\n  const COMPARISON_OPERATORS =\n    '-and|-as|-band|-bnot|-bor|-bxor|-casesensitive|-ccontains|-ceq|-cge|-cgt|' +\n    '-cle|-clike|-clt|-cmatch|-cne|-cnotcontains|-cnotlike|-cnotmatch|-contains|' +\n    '-creplace|-csplit|-eq|-exact|-f|-file|-ge|-gt|-icontains|-ieq|-ige|-igt|' +\n    '-ile|-ilike|-ilt|-imatch|-in|-ine|-inotcontains|-inotlike|-inotmatch|' +\n    '-ireplace|-is|-isnot|-isplit|-join|-le|-like|-lt|-match|-ne|-not|' +\n    '-notcontains|-notin|-notlike|-notmatch|-or|-regex|-replace|-shl|-shr|' +\n    '-split|-wildcard|-xor';\n\n  const KEYWORDS = {\n    $pattern: /-?[A-z\\.\\-]+\\b/,\n    keyword:\n      'if else foreach return do while until elseif begin for trap data dynamicparam ' +\n      'end break throw param continue finally in switch exit filter try process catch ' +\n      'hidden static parameter',\n    // \"echo\" relevance has been set to 0 to avoid auto-detect conflicts with shell transcripts\n    built_in:\n      'ac asnp cat cd CFS chdir clc clear clhy cli clp cls clv cnsn compare copy cp ' +\n      'cpi cpp curl cvpa dbp del diff dir dnsn ebp echo|0 epal epcsv epsn erase etsn exsn fc fhx ' +\n      'fl ft fw gal gbp gc gcb gci gcm gcs gdr gerr ghy gi gin gjb gl gm gmo gp gps gpv group ' +\n      'gsn gsnp gsv gtz gu gv gwmi h history icm iex ihy ii ipal ipcsv ipmo ipsn irm ise iwmi ' +\n      'iwr kill lp ls man md measure mi mount move mp mv nal ndr ni nmo npssc nsn nv ogv oh ' +\n      'popd ps pushd pwd r rbp rcjb rcsn rd rdr ren ri rjb rm rmdir rmo rni rnp rp rsn rsnp ' +\n      'rujb rv rvpa rwmi sajb sal saps sasv sbp sc scb select set shcm si sl sleep sls sort sp ' +\n      'spjb spps spsv start stz sujb sv swmi tee trcm type wget where wjb write'\n    // TODO: 'validate[A-Z]+' can't work in keywords\n  };\n\n  const TITLE_NAME_RE = /\\w[\\w\\d]*((-)[\\w\\d]+)*/;\n\n  const BACKTICK_ESCAPE = {\n    begin: '`[\\\\s\\\\S]',\n    relevance: 0\n  };\n\n  const VAR = {\n    className: 'variable',\n    variants: [\n      {\n        begin: /\\$\\B/\n      },\n      {\n        className: 'keyword',\n        begin: /\\$this/\n      },\n      {\n        begin: /\\$[\\w\\d][\\w\\d_:]*/\n      }\n    ]\n  };\n\n  const LITERAL = {\n    className: 'literal',\n    begin: /\\$(null|true|false)\\b/\n  };\n\n  const QUOTE_STRING = {\n    className: \"string\",\n    variants: [\n      {\n        begin: /\"/,\n        end: /\"/\n      },\n      {\n        begin: /@\"/,\n        end: /^\"@/\n      }\n    ],\n    contains: [\n      BACKTICK_ESCAPE,\n      VAR,\n      {\n        className: 'variable',\n        begin: /\\$[A-z]/,\n        end: /[^A-z]/\n      }\n    ]\n  };\n\n  const APOS_STRING = {\n    className: 'string',\n    variants: [\n      {\n        begin: /'/,\n        end: /'/\n      },\n      {\n        begin: /@'/,\n        end: /^'@/\n      }\n    ]\n  };\n\n  const PS_HELPTAGS = {\n    className: \"doctag\",\n    variants: [\n      /* no paramater help tags */\n      {\n        begin: /\\.(synopsis|description|example|inputs|outputs|notes|link|component|role|functionality)/\n      },\n      /* one parameter help tags */\n      {\n        begin: /\\.(parameter|forwardhelptargetname|forwardhelpcategory|remotehelprunspace|externalhelp)\\s+\\S+/\n      }\n    ]\n  };\n\n  const PS_COMMENT = hljs.inherit(\n    hljs.COMMENT(null, null),\n    {\n      variants: [\n        /* single-line comment */\n        {\n          begin: /#/,\n          end: /$/\n        },\n        /* multi-line comment */\n        {\n          begin: /<#/,\n          end: /#>/\n        }\n      ],\n      contains: [ PS_HELPTAGS ]\n    }\n  );\n\n  const CMDLETS = {\n    className: 'built_in',\n    variants: [\n      {\n        begin: '('.concat(VALID_VERBS, ')+(-)[\\\\w\\\\d]+')\n      }\n    ]\n  };\n\n  const PS_CLASS = {\n    className: 'class',\n    beginKeywords: 'class enum',\n    end: /\\s*[{]/,\n    excludeEnd: true,\n    relevance: 0,\n    contains: [ hljs.TITLE_MODE ]\n  };\n\n  const PS_FUNCTION = {\n    className: 'function',\n    begin: /function\\s+/,\n    end: /\\s*\\{|$/,\n    excludeEnd: true,\n    returnBegin: true,\n    relevance: 0,\n    contains: [\n      {\n        begin: \"function\",\n        relevance: 0,\n        className: \"keyword\"\n      },\n      {\n        className: \"title\",\n        begin: TITLE_NAME_RE,\n        relevance: 0\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        className: \"params\",\n        relevance: 0,\n        contains: [ VAR ]\n      }\n      // CMDLETS\n    ]\n  };\n\n  // Using statment, plus type, plus assembly name.\n  const PS_USING = {\n    begin: /using\\s/,\n    end: /$/,\n    returnBegin: true,\n    contains: [\n      QUOTE_STRING,\n      APOS_STRING,\n      {\n        className: 'keyword',\n        begin: /(using|assembly|command|module|namespace|type)/\n      }\n    ]\n  };\n\n  // Comperison operators & function named parameters.\n  const PS_ARGUMENTS = {\n    variants: [\n      // PS literals are pretty verbose so it's a good idea to accent them a bit.\n      {\n        className: 'operator',\n        begin: '('.concat(COMPARISON_OPERATORS, ')\\\\b')\n      },\n      {\n        className: 'literal',\n        begin: /(-){1,2}[\\w\\d-]+/,\n        relevance: 0\n      }\n    ]\n  };\n\n  const HASH_SIGNS = {\n    className: 'selector-tag',\n    begin: /@\\B/,\n    relevance: 0\n  };\n\n  // It's a very general rule so I'll narrow it a bit with some strict boundaries\n  // to avoid any possible false-positive collisions!\n  const PS_METHODS = {\n    className: 'function',\n    begin: /\\[.*\\]\\s*[\\w]+[ ]??\\(/,\n    end: /$/,\n    returnBegin: true,\n    relevance: 0,\n    contains: [\n      {\n        className: 'keyword',\n        begin: '('.concat(\n          KEYWORDS.keyword.toString().replace(/\\s/g, '|'\n          ), ')\\\\b'),\n        endsParent: true,\n        relevance: 0\n      },\n      hljs.inherit(hljs.TITLE_MODE, {\n        endsParent: true\n      })\n    ]\n  };\n\n  const GENTLEMANS_SET = [\n    // STATIC_MEMBER,\n    PS_METHODS,\n    PS_COMMENT,\n    BACKTICK_ESCAPE,\n    hljs.NUMBER_MODE,\n    QUOTE_STRING,\n    APOS_STRING,\n    // PS_NEW_OBJECT_TYPE,\n    CMDLETS,\n    VAR,\n    LITERAL,\n    HASH_SIGNS\n  ];\n\n  const PS_TYPE = {\n    begin: /\\[/,\n    end: /\\]/,\n    excludeBegin: true,\n    excludeEnd: true,\n    relevance: 0,\n    contains: [].concat(\n      'self',\n      GENTLEMANS_SET,\n      {\n        begin: \"(\" + TYPES.join(\"|\") + \")\",\n        className: \"built_in\",\n        relevance: 0\n      },\n      {\n        className: 'type',\n        begin: /[\\.\\w\\d]+/,\n        relevance: 0\n      }\n    )\n  };\n\n  PS_METHODS.contains.unshift(PS_TYPE);\n\n  return {\n    name: 'PowerShell',\n    aliases: [\n      \"pwsh\",\n      \"ps\",\n      \"ps1\"\n    ],\n    case_insensitive: true,\n    keywords: KEYWORDS,\n    contains: GENTLEMANS_SET.concat(\n      PS_CLASS,\n      PS_FUNCTION,\n      PS_USING,\n      PS_ARGUMENTS,\n      PS_TYPE\n    )\n  };\n}\n\nmodule.exports = powershell;\n","function emitWarning() {\n    if (!emitWarning.warned) {\n      emitWarning.warned = true;\n      console.log(\n        'Deprecation (warning): Using file extension in specifier is deprecated, use \"highlight.js/lib/languages/powershell\" instead of \"highlight.js/lib/languages/powershell.js\"'\n      );\n    }\n  }\n  emitWarning();\n    module.exports = require('./powershell.js');"],"sourceRoot":""}