{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/gams.js"],"names":["source","re","anyNumberOfTimes","concat","args","joined","map","x","join","gams","hljs","KEYWORDS","keyword","literal","built_in","PARAMS","className","begin","end","excludeBegin","excludeEnd","SYMBOLS","variants","QSTR","illegal","contains","BACKSLASH_ESCAPE","ASSIGNMENT","keywords","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","QUOTE_STRING_MODE","APOS_STRING_MODE","C_NUMBER_MODE","COMMENT_WORD","DESCTEXT","endsWithParent","relevance","name","aliases","case_insensitive","COMMENT","returnBegin","beginKeywords","module","exports"],"mappings":"mGASA,SAASA,EAAOC,GACd,OAAKA,EACa,kBAAPA,EAAwBA,EAE5BA,EAAGD,OAHM,KAUlB,SAASE,EAAiBD,GACxB,OAAOE,EAAO,MAAOF,EAAI,MAO3B,SAASE,KAAUC,GACjB,MAAMC,EAASD,EAAKE,IAAKC,GAAMP,EAAOO,IAAIC,KAAK,IAC/C,OAAOH,EAIT,SAASI,EAAKC,GACZ,MAAMC,EAAW,CACfC,QACE,oVAKFC,QACE,aACFC,SACE,u3BAeEC,EAAS,CACbC,UAAW,SACXC,MAAO,KACPC,IAAK,KACLC,cAAc,EACdC,YAAY,GAERC,EAAU,CACdL,UAAW,SACXM,SAAU,CACR,CACEL,MAAO,cAET,CACEA,MAAO,QAIPM,EAAO,CACXP,UAAW,UACXM,SAAU,CACR,CACEL,MAAO,IACPC,IAAK,KAEP,CACED,MAAO,IACPC,IAAK,MAGTM,QAAS,MACTC,SAAU,CAACf,EAAKgB,mBAEZC,EAAa,CACjBV,MAAO,IACPC,IAAK,IACLU,SAAUjB,EACVc,SAAU,CACRF,EACAb,EAAKmB,oBACLnB,EAAKoB,qBACLpB,EAAKqB,kBACLrB,EAAKsB,iBACLtB,EAAKuB,gBAGHC,EAAe,uCACfC,EAAW,CACflB,MAAO,2CACPE,cAAc,EACdD,IAAK,IACLkB,gBAAgB,EAChBX,SAAU,CACRF,EACAI,EACA,CACEX,UAAW,UAEXC,MAAOd,EACL+B,EAEAhC,EAAiBC,EAAO,OAAQ+B,KAElCG,UAAW,KAKjB,MAAO,CACLC,KAAM,OACNC,QAAS,CAAC,OACVC,kBAAkB,EAClBZ,SAAUjB,EACVc,SAAU,CACRf,EAAK+B,QAAQ,YAAa,cAC1B,CACEzB,UAAW,OACXC,MAAO,gBACPC,IAAK,IACLwB,aAAa,EACbjB,SAAU,CACR,CACET,UAAW,UACXC,MAAO,mBAIbP,EAAK+B,QAAQ,OAAQ,KACrB/B,EAAKmB,oBACLnB,EAAKoB,qBACLpB,EAAKqB,kBACLrB,EAAKsB,iBAEL,CACEW,cACE,qFAEFzB,IAAK,IACLO,SAAU,CACRf,EAAK+B,QAAQ,OAAQ,KACrB/B,EAAKmB,oBACLnB,EAAKoB,qBACLpB,EAAKqB,kBACLrB,EAAKsB,iBACLL,EACAQ,IAGJ,CACEQ,cAAe,QACfzB,IAAK,IACLwB,aAAa,EACbjB,SAAU,CACR,CACEkB,cAAe,QACfzB,IAAK,IACLO,SAAU,CAACU,IAEbzB,EAAK+B,QAAQ,OAAQ,KACrB/B,EAAKmB,oBACLnB,EAAKoB,qBACLpB,EAAKqB,kBACLrB,EAAKsB,iBACLtB,EAAKuB,gBAKT,CACEjB,UAAW,WACXC,MAAO,iCACPyB,aAAa,EACbjB,SAAU,CACR,CACET,UAAW,QACXC,MAAO,eAETF,EACAM,IAGJX,EAAKuB,cACLZ,IAKNuB,EAAOC,QAAUpC","file":"js/chunk-2d0e200e.259f5ef9.js","sourcesContent":["/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction anyNumberOfTimes(re) {\n  return concat('(?:', re, ')*');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/** @type LanguageFn */\nfunction gams(hljs) {\n  const KEYWORDS = {\n    keyword:\n      'abort acronym acronyms alias all and assign binary card diag display ' +\n      'else eq file files for free ge gt if integer le loop lt maximizing ' +\n      'minimizing model models ne negative no not option options or ord ' +\n      'positive prod put putpage puttl repeat sameas semicont semiint smax ' +\n      'smin solve sos1 sos2 sum system table then until using while xor yes',\n    literal:\n      'eps inf na',\n    built_in:\n      'abs arccos arcsin arctan arctan2 Beta betaReg binomial ceil centropy ' +\n      'cos cosh cvPower div div0 eDist entropy errorf execSeed exp fact ' +\n      'floor frac gamma gammaReg log logBeta logGamma log10 log2 mapVal max ' +\n      'min mod ncpCM ncpF ncpVUpow ncpVUsin normal pi poly power ' +\n      'randBinomial randLinear randTriangle round rPower sigmoid sign ' +\n      'signPower sin sinh slexp sllog10 slrec sqexp sqlog10 sqr sqrec sqrt ' +\n      'tan tanh trunc uniform uniformInt vcPower bool_and bool_eqv bool_imp ' +\n      'bool_not bool_or bool_xor ifThen rel_eq rel_ge rel_gt rel_le rel_lt ' +\n      'rel_ne gday gdow ghour gleap gmillisec gminute gmonth gsecond gyear ' +\n      'jdate jnow jstart jtime errorLevel execError gamsRelease gamsVersion ' +\n      'handleCollect handleDelete handleStatus handleSubmit heapFree ' +\n      'heapLimit heapSize jobHandle jobKill jobStatus jobTerminate ' +\n      'licenseLevel licenseStatus maxExecError sleep timeClose timeComp ' +\n      'timeElapsed timeExec timeStart'\n  };\n  const PARAMS = {\n    className: 'params',\n    begin: /\\(/,\n    end: /\\)/,\n    excludeBegin: true,\n    excludeEnd: true\n  };\n  const SYMBOLS = {\n    className: 'symbol',\n    variants: [\n      {\n        begin: /=[lgenxc]=/\n      },\n      {\n        begin: /\\$/\n      }\n    ]\n  };\n  const QSTR = { // One-line quoted comment string\n    className: 'comment',\n    variants: [\n      {\n        begin: '\\'',\n        end: '\\''\n      },\n      {\n        begin: '\"',\n        end: '\"'\n      }\n    ],\n    illegal: '\\\\n',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  const ASSIGNMENT = {\n    begin: '/',\n    end: '/',\n    keywords: KEYWORDS,\n    contains: [\n      QSTR,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.C_NUMBER_MODE\n    ]\n  };\n  const COMMENT_WORD = /[a-z0-9&#*=?@\\\\><:,()$[\\]_.{}!+%^-]+/;\n  const DESCTEXT = { // Parameter/set/variable description text\n    begin: /[a-z][a-z0-9_]*(\\([a-z0-9_, ]*\\))?[ \\t]+/,\n    excludeBegin: true,\n    end: '$',\n    endsWithParent: true,\n    contains: [\n      QSTR,\n      ASSIGNMENT,\n      {\n        className: 'comment',\n        // one comment word, then possibly more\n        begin: concat(\n          COMMENT_WORD,\n          // [ ] because \\s would be too broad (matching newlines)\n          anyNumberOfTimes(concat(/[ ]+/, COMMENT_WORD))\n        ),\n        relevance: 0\n      }\n    ]\n  };\n\n  return {\n    name: 'GAMS',\n    aliases: ['gms'],\n    case_insensitive: true,\n    keywords: KEYWORDS,\n    contains: [\n      hljs.COMMENT(/^\\$ontext/, /^\\$offtext/),\n      {\n        className: 'meta',\n        begin: '^\\\\$[a-z0-9]+',\n        end: '$',\n        returnBegin: true,\n        contains: [\n          {\n            className: 'keyword',\n            begin: '^\\\\$[a-z0-9]+'\n          }\n        ]\n      },\n      hljs.COMMENT('^\\\\*', '$'),\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.APOS_STRING_MODE,\n      // Declarations\n      {\n        beginKeywords:\n          'set sets parameter parameters variable variables ' +\n          'scalar scalars equation equations',\n        end: ';',\n        contains: [\n          hljs.COMMENT('^\\\\*', '$'),\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          hljs.QUOTE_STRING_MODE,\n          hljs.APOS_STRING_MODE,\n          ASSIGNMENT,\n          DESCTEXT\n        ]\n      },\n      { // table environment\n        beginKeywords: 'table',\n        end: ';',\n        returnBegin: true,\n        contains: [\n          { // table header row\n            beginKeywords: 'table',\n            end: '$',\n            contains: [DESCTEXT]\n          },\n          hljs.COMMENT('^\\\\*', '$'),\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          hljs.QUOTE_STRING_MODE,\n          hljs.APOS_STRING_MODE,\n          hljs.C_NUMBER_MODE\n          // Table does not contain DESCTEXT or ASSIGNMENT\n        ]\n      },\n      // Function definitions\n      {\n        className: 'function',\n        begin: /^[a-z][a-z0-9_,\\-+' ()$]+\\.{2}/,\n        returnBegin: true,\n        contains: [\n          { // Function title\n            className: 'title',\n            begin: /^[a-z0-9_]+/\n          },\n          PARAMS,\n          SYMBOLS\n        ]\n      },\n      hljs.C_NUMBER_MODE,\n      SYMBOLS\n    ]\n  };\n}\n\nmodule.exports = gams;\n"],"sourceRoot":""}