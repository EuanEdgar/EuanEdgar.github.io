{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/nestedtext.js.js","webpack:///./node_modules/highlight.js/lib/languages/nestedtext.js"],"names":["emitWarning","warned","console","log","module","exports","nestedtext","hljs","NESTED","match","className","2","3","DICTIONARY_ITEM","5","STRING","4","LIST_ITEM","variants","name","aliases","contains","inherit","HASH_COMMENT_MODE","begin","excludeBegin"],"mappings":"sHAAA,SAASA,IACAA,EAAYC,SACfD,EAAYC,QAAS,EACrBC,QAAQC,IACN,8KAINH,IACEI,EAAOC,QAAU,EAAQ,S,qBCD7B,SAASC,EAAWC,GAClB,MAAMC,EAAS,CACbC,MAAO,CACL,aACA,QACA,OACA,KAEFC,UAAW,CACTC,EAAG,YACHC,EAAG,gBAGDC,EAAkB,CACtBJ,MAAO,CACL,aACA,aACA,QACA,MACA,OAEFC,UAAW,CACTC,EAAG,YACHC,EAAG,cACHE,EAAG,WAGDC,EAAS,CACbN,MAAO,CACL,OACA,IACA,MACA,OAEFC,UAAW,CACTC,EAAG,cACHK,EAAG,WAGDC,EAAY,CAChBC,SAAU,CACR,CACET,MAAO,CACL,OACA,IACA,MACA,QAGJ,CACEA,MAAO,CACL,OACA,QAINC,UAAW,CACTC,EAAG,SACHK,EAAG,WAIP,MAAO,CACLG,KAAM,cACNC,QAAS,CAAE,MACXC,SAAU,CACRd,EAAKe,QAAQf,EAAKgB,kBAAmB,CACnCC,MAAO,YACPC,cAAc,IAEhBR,EACAF,EACAP,EACAK,IAKNT,EAAOC,QAAUC","file":"js/chunk-b72747a4.dd404686.js","sourcesContent":["function emitWarning() {\n    if (!emitWarning.warned) {\n      emitWarning.warned = true;\n      console.log(\n        'Deprecation (warning): Using file extension in specifier is deprecated, use \"highlight.js/lib/languages/nestedtext\" instead of \"highlight.js/lib/languages/nestedtext.js\"'\n      );\n    }\n  }\n  emitWarning();\n    module.exports = require('./nestedtext.js');","/*\nLanguage: NestedText\nDescription: NestedText is a file format for holding data that is to be entered, edited, or viewed by people.\nWebsite: https://nestedtext.org/\nCategory: config\n*/\n\n/** @type LanguageFn */\nfunction nestedtext(hljs) {\n  const NESTED = {\n    match: [\n      /^\\s*(?=\\S)/, // have to look forward here to avoid polynomial backtracking\n      /[^:]+/,\n      /:\\s*/,\n      /$/\n    ],\n    className: {\n      2: \"attribute\",\n      3: \"punctuation\"\n    }\n  };\n  const DICTIONARY_ITEM = {\n    match: [\n      /^\\s*(?=\\S)/, // have to look forward here to avoid polynomial backtracking\n      /[^:]*[^: ]/,\n      /[ ]*:/,\n      /[ ]/,\n      /.*$/\n    ],\n    className: {\n      2: \"attribute\",\n      3: \"punctuation\",\n      5: \"string\"\n    }\n  };\n  const STRING = {\n    match: [\n      /^\\s*/,\n      />/,\n      /[ ]/,\n      /.*$/\n    ],\n    className: {\n      2: \"punctuation\",\n      4: \"string\"\n    }\n  };\n  const LIST_ITEM = {\n    variants: [\n      {\n        match: [\n          /^\\s*/,\n          /-/,\n          /[ ]/,\n          /.*$/\n        ]\n      },\n      {\n        match: [\n          /^\\s*/,\n          /-$/\n        ]\n      }\n    ],\n    className: {\n      2: \"bullet\",\n      4: \"string\"\n    }\n  };\n\n  return {\n    name: 'Nested Text',\n    aliases: [ 'nt' ],\n    contains: [\n      hljs.inherit(hljs.HASH_COMMENT_MODE, {\n        begin: /^\\s*(?=#)/,\n        excludeBegin: true\n      }),\n      LIST_ITEM,\n      STRING,\n      NESTED,\n      DICTIONARY_ITEM\n    ]\n  };\n}\n\nmodule.exports = nestedtext;\n"],"sourceRoot":""}