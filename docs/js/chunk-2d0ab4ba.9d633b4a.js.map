{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/latex.js"],"names":["source","re","stripOptionsFromArgs","args","opts","length","constructor","Object","splice","either","joined","capture","map","x","join","latex","hljs","KNOWN_CONTROL_WORDS","word","L3_REGEX","RegExp","pattern","L2_VARIANTS","begin","DOUBLE_CARET_VARIANTS","CONTROL_SEQUENCE","className","relevance","contains","endsParent","variants","MACRO_PARAM","DOUBLE_CARET_CHAR","SPECIAL_CATCODE","MAGIC_COMMENT","end","COMMENT","EVERYTHING_BUT_VERBATIM","BRACE_GROUP_NO_VERBATIM","ARGUMENT_BRACES","inherit","ARGUMENT_BRACKETS","SPACE_GOBBLER","ARGUMENT_M","ARGUMENT_O","ARGUMENT_AND_THEN","arg","starts_mode","starts","CSNAME","csname","keywords","$pattern","keyword","BEGIN_ENV","envname","VERBATIM_DELIMITED_EQUAL","innerName","END_SAME_AS_BEGIN","excludeBegin","excludeEnd","VERBATIM_DELIMITED_ENV","VERBATIM_DELIMITED_BRACES","VERBATIM","concat","suffix","prefix","name","aliases","module","exports"],"mappings":"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","file":"js/chunk-2d0ab4ba.9d633b4a.js","sourcesContent":["/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\nfunction stripOptionsFromArgs(args) {\n  const opts = args[args.length - 1];\n\n  if (typeof opts === 'object' && opts.constructor === Object) {\n    args.splice(args.length - 1, 1);\n    return opts;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] } args\n * @returns {string}\n */\nfunction either(...args) {\n  const opts = stripOptionsFromArgs(args);\n  const joined = '(' +\n    (opts.capture ? \"\" : \"?:\") +\n    args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\n/*\nLanguage: LaTeX\nAuthor: Benedikt Wilde <bwilde@posteo.de>\nWebsite: https://www.latex-project.org\nCategory: markup\n*/\n\n/** @type LanguageFn */\nfunction latex(hljs) {\n  const KNOWN_CONTROL_WORDS = either(...[\n      '(?:NeedsTeXFormat|RequirePackage|GetIdInfo)',\n      'Provides(?:Expl)?(?:Package|Class|File)',\n      '(?:DeclareOption|ProcessOptions)',\n      '(?:documentclass|usepackage|input|include)',\n      'makeat(?:letter|other)',\n      'ExplSyntax(?:On|Off)',\n      '(?:new|renew|provide)?command',\n      '(?:re)newenvironment',\n      '(?:New|Renew|Provide|Declare)(?:Expandable)?DocumentCommand',\n      '(?:New|Renew|Provide|Declare)DocumentEnvironment',\n      '(?:(?:e|g|x)?def|let)',\n      '(?:begin|end)',\n      '(?:part|chapter|(?:sub){0,2}section|(?:sub)?paragraph)',\n      'caption',\n      '(?:label|(?:eq|page|name)?ref|(?:paren|foot|super)?cite)',\n      '(?:alpha|beta|[Gg]amma|[Dd]elta|(?:var)?epsilon|zeta|eta|[Tt]heta|vartheta)',\n      '(?:iota|(?:var)?kappa|[Ll]ambda|mu|nu|[Xx]i|[Pp]i|varpi|(?:var)rho)',\n      '(?:[Ss]igma|varsigma|tau|[Uu]psilon|[Pp]hi|varphi|chi|[Pp]si|[Oo]mega)',\n      '(?:frac|sum|prod|lim|infty|times|sqrt|leq|geq|left|right|middle|[bB]igg?)',\n      '(?:[lr]angle|q?quad|[lcvdi]?dots|d?dot|hat|tilde|bar)'\n    ].map(word => word + '(?![a-zA-Z@:_])'));\n  const L3_REGEX = new RegExp([\n      // A function \\module_function_name:signature or \\__module_function_name:signature,\n      // where both module and function_name need at least two characters and\n      // function_name may contain single underscores.\n      '(?:__)?[a-zA-Z]{2,}_[a-zA-Z](?:_?[a-zA-Z])+:[a-zA-Z]*',\n      // A variable \\scope_module_and_name_type or \\scope__module_ane_name_type,\n      // where scope is one of l, g or c, type needs at least two characters\n      // and module_and_name may contain single underscores.\n      '[lgc]__?[a-zA-Z](?:_?[a-zA-Z])*_[a-zA-Z]{2,}',\n      // A quark \\q_the_name or \\q__the_name or\n      // scan mark \\s_the_name or \\s__vthe_name,\n      // where variable_name needs at least two characters and\n      // may contain single underscores.\n      '[qs]__?[a-zA-Z](?:_?[a-zA-Z])+',\n      // Other LaTeX3 macro names that are not covered by the three rules above.\n      'use(?:_i)?:[a-zA-Z]*',\n      '(?:else|fi|or):',\n      '(?:if|cs|exp):w',\n      '(?:hbox|vbox):n',\n      '::[a-zA-Z]_unbraced',\n      '::[a-zA-Z:]'\n    ].map(pattern => pattern + '(?![a-zA-Z:_])').join('|'));\n  const L2_VARIANTS = [\n    {begin: /[a-zA-Z@]+/}, // control word\n    {begin: /[^a-zA-Z@]?/} // control symbol\n  ];\n  const DOUBLE_CARET_VARIANTS = [\n    {begin: /\\^{6}[0-9a-f]{6}/},\n    {begin: /\\^{5}[0-9a-f]{5}/},\n    {begin: /\\^{4}[0-9a-f]{4}/},\n    {begin: /\\^{3}[0-9a-f]{3}/},\n    {begin: /\\^{2}[0-9a-f]{2}/},\n    {begin: /\\^{2}[\\u0000-\\u007f]/}\n  ];\n  const CONTROL_SEQUENCE = {\n    className: 'keyword',\n    begin: /\\\\/,\n    relevance: 0,\n    contains: [\n      {\n        endsParent: true,\n        begin: KNOWN_CONTROL_WORDS\n      },\n      {\n        endsParent: true,\n        begin: L3_REGEX\n      },\n      {\n        endsParent: true,\n        variants: DOUBLE_CARET_VARIANTS\n      },\n      {\n        endsParent: true,\n        relevance: 0,\n        variants: L2_VARIANTS\n      }\n    ]\n  };\n  const MACRO_PARAM = {\n    className: 'params',\n    relevance: 0,\n    begin: /#+\\d?/\n  };\n  const DOUBLE_CARET_CHAR = {\n    // relevance: 1\n    variants: DOUBLE_CARET_VARIANTS\n  };\n  const SPECIAL_CATCODE = {\n    className: 'built_in',\n    relevance: 0,\n    begin: /[$&^_]/\n  };\n  const MAGIC_COMMENT = {\n    className: 'meta',\n    begin: /% ?!(T[eE]X|tex|BIB|bib)/,\n    end: '$',\n    relevance: 10\n  };\n  const COMMENT = hljs.COMMENT(\n    '%',\n    '$',\n    {\n      relevance: 0\n    }\n  );\n  const EVERYTHING_BUT_VERBATIM = [\n    CONTROL_SEQUENCE,\n    MACRO_PARAM,\n    DOUBLE_CARET_CHAR,\n    SPECIAL_CATCODE,\n    MAGIC_COMMENT,\n    COMMENT\n  ];\n  const BRACE_GROUP_NO_VERBATIM = {\n    begin: /\\{/, end: /\\}/,\n    relevance: 0,\n    contains: ['self', ...EVERYTHING_BUT_VERBATIM]\n  };\n  const ARGUMENT_BRACES = hljs.inherit(\n    BRACE_GROUP_NO_VERBATIM,\n    {\n      relevance: 0,\n      endsParent: true,\n      contains: [BRACE_GROUP_NO_VERBATIM, ...EVERYTHING_BUT_VERBATIM]\n    }\n  );\n  const ARGUMENT_BRACKETS = {\n    begin: /\\[/,\n      end: /\\]/,\n    endsParent: true,\n    relevance: 0,\n    contains: [BRACE_GROUP_NO_VERBATIM, ...EVERYTHING_BUT_VERBATIM]\n  };\n  const SPACE_GOBBLER = {\n    begin: /\\s+/,\n    relevance: 0\n  };\n  const ARGUMENT_M = [ARGUMENT_BRACES];\n  const ARGUMENT_O = [ARGUMENT_BRACKETS];\n  const ARGUMENT_AND_THEN = function(arg, starts_mode) {\n    return {\n      contains: [SPACE_GOBBLER],\n      starts: {\n        relevance: 0,\n        contains: arg,\n        starts: starts_mode\n      }\n    };\n  };\n  const CSNAME = function(csname, starts_mode) {\n    return {\n        begin: '\\\\\\\\' + csname + '(?![a-zA-Z@:_])',\n        keywords: {$pattern: /\\\\[a-zA-Z]+/, keyword: '\\\\' + csname},\n        relevance: 0,\n        contains: [SPACE_GOBBLER],\n        starts: starts_mode\n      };\n  };\n  const BEGIN_ENV = function(envname, starts_mode) {\n    return hljs.inherit(\n      {\n        begin: '\\\\\\\\begin(?=[ \\t]*(\\\\r?\\\\n[ \\t]*)?\\\\{' + envname + '\\\\})',\n        keywords: {$pattern: /\\\\[a-zA-Z]+/, keyword: '\\\\begin'},\n        relevance: 0,\n      },\n      ARGUMENT_AND_THEN(ARGUMENT_M, starts_mode)\n    );\n  };\n  const VERBATIM_DELIMITED_EQUAL = (innerName = \"string\") => {\n    return hljs.END_SAME_AS_BEGIN({\n      className: innerName,\n      begin: /(.|\\r?\\n)/,\n      end: /(.|\\r?\\n)/,\n      excludeBegin: true,\n      excludeEnd: true,\n      endsParent: true\n    });\n  };\n  const VERBATIM_DELIMITED_ENV = function(envname) {\n    return {\n      className: 'string',\n      end: '(?=\\\\\\\\end\\\\{' + envname + '\\\\})'\n    };\n  };\n\n  const VERBATIM_DELIMITED_BRACES = (innerName = \"string\") => {\n    return {\n      relevance: 0,\n      begin: /\\{/,\n      starts: {\n        endsParent: true,\n        contains: [\n          {\n            className: innerName,\n            end: /(?=\\})/,\n            endsParent:true,\n            contains: [\n              {\n                begin: /\\{/,\n                end: /\\}/,\n                relevance: 0,\n                contains: [\"self\"]\n              }\n            ],\n          }\n        ]\n      }\n    };\n  };\n  const VERBATIM = [\n    ...['verb', 'lstinline'].map(csname => CSNAME(csname, {contains: [VERBATIM_DELIMITED_EQUAL()]})),\n    CSNAME('mint', ARGUMENT_AND_THEN(ARGUMENT_M, {contains: [VERBATIM_DELIMITED_EQUAL()]})),\n    CSNAME('mintinline', ARGUMENT_AND_THEN(ARGUMENT_M, {contains: [VERBATIM_DELIMITED_BRACES(), VERBATIM_DELIMITED_EQUAL()]})),\n    CSNAME('url', {contains: [VERBATIM_DELIMITED_BRACES(\"link\"), VERBATIM_DELIMITED_BRACES(\"link\")]}),\n    CSNAME('hyperref', {contains: [VERBATIM_DELIMITED_BRACES(\"link\")]}),\n    CSNAME('href', ARGUMENT_AND_THEN(ARGUMENT_O, {contains: [VERBATIM_DELIMITED_BRACES(\"link\")]})),\n    ...[].concat(...['', '\\\\*'].map(suffix => [\n      BEGIN_ENV('verbatim' + suffix, VERBATIM_DELIMITED_ENV('verbatim' + suffix)),\n      BEGIN_ENV('filecontents' + suffix,  ARGUMENT_AND_THEN(ARGUMENT_M, VERBATIM_DELIMITED_ENV('filecontents' + suffix))),\n      ...['', 'B', 'L'].map(prefix =>\n        BEGIN_ENV(prefix + 'Verbatim' + suffix, ARGUMENT_AND_THEN(ARGUMENT_O, VERBATIM_DELIMITED_ENV(prefix + 'Verbatim' + suffix)))\n      )\n    ])),\n    BEGIN_ENV('minted', ARGUMENT_AND_THEN(ARGUMENT_O, ARGUMENT_AND_THEN(ARGUMENT_M, VERBATIM_DELIMITED_ENV('minted')))),\n  ];\n\n  return {\n    name: 'LaTeX',\n    aliases: ['tex'],\n    contains: [\n      ...VERBATIM,\n      ...EVERYTHING_BUT_VERBATIM\n    ]\n  };\n}\n\nmodule.exports = latex;\n"],"sourceRoot":""}