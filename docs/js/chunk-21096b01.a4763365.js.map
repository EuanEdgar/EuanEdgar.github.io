{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/gcode.js","webpack:///./node_modules/highlight.js/lib/languages/gcode.js.js"],"names":["gcode","hljs","GCODE_IDENT_RE","GCODE_CLOSE_RE","GCODE_KEYWORDS","$pattern","keyword","GCODE_START","className","begin","NUMBER","inherit","C_NUMBER_MODE","C_NUMBER_RE","GCODE_CODE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","COMMENT","APOS_STRING_MODE","illegal","QUOTE_STRING_MODE","end","contains","variants","name","aliases","case_insensitive","keywords","concat","module","exports","emitWarning","warned","console","log"],"mappings":"oHAOA,SAASA,EAAMC,GACb,MAAMC,EAAiB,oBACjBC,EAAiB,IACjBC,EAAiB,CACrBC,SAAUH,EACVI,QAAS,6FAGLC,EAAc,CAClBC,UAAW,OACXC,MAAO,iBAEHC,EAAST,EAAKU,QAAQV,EAAKW,cAAe,CAC9CH,MAAO,uCAAyCR,EAAKY,cAEjDC,EAAa,CACjBb,EAAKc,oBACLd,EAAKe,qBACLf,EAAKgB,QAAQ,KAAM,MACnBP,EACAT,EAAKU,QAAQV,EAAKiB,iBAAkB,CAClCC,QAAS,OAEXlB,EAAKU,QAAQV,EAAKmB,kBAAmB,CACnCD,QAAS,OAEX,CACEX,UAAW,OACXC,MAAO,2BAET,CACED,UAAW,OACXC,MAAO,2BAET,CACED,UAAW,OACXC,MAAO,YACPY,IAAK,UAEP,CACEb,UAAW,OACXC,MAAO,uBAET,CACED,UAAW,WACXC,MAAO,6DACPa,SAAU,CACRZ,GAEFW,IAAK,OAEP,CACEb,UAAW,SACXe,SAAU,CACR,CACEd,MAAO,IACPY,IAAK,OACLF,QAAS,UAMjB,MAAO,CACLK,KAAM,oBACNC,QAAS,CAAC,MAGVC,kBAAkB,EAClBC,SAAUvB,EACVkB,SAAU,CACR,CACEd,UAAW,OACXC,MAAON,GAETI,GACAqB,OAAOd,IAIbe,EAAOC,QAAU9B,G,qBCvFjB,SAAS+B,IACAA,EAAYC,SACfD,EAAYC,QAAS,EACrBC,QAAQC,IACN,oKAINH,IACEF,EAAOC,QAAU,EAAQ","file":"js/chunk-21096b01.a4763365.js","sourcesContent":["/*\n Language: G-code (ISO 6983)\n Contributors: Adam Joseph Cook <adam.joseph.cook@gmail.com>\n Description: G-code syntax highlighter for Fanuc and other common CNC machine tool controls.\n Website: https://www.sis.se/api/document/preview/911952/\n */\n\nfunction gcode(hljs) {\n  const GCODE_IDENT_RE = '[A-Z_][A-Z0-9_.]*';\n  const GCODE_CLOSE_RE = '%';\n  const GCODE_KEYWORDS = {\n    $pattern: GCODE_IDENT_RE,\n    keyword: 'IF DO WHILE ENDWHILE CALL ENDIF SUB ENDSUB GOTO REPEAT ENDREPEAT ' +\n      'EQ LT GT NE GE LE OR XOR'\n  };\n  const GCODE_START = {\n    className: 'meta',\n    begin: '([O])([0-9]+)'\n  };\n  const NUMBER = hljs.inherit(hljs.C_NUMBER_MODE, {\n    begin: '([-+]?((\\\\.\\\\d+)|(\\\\d+)(\\\\.\\\\d*)?))|' + hljs.C_NUMBER_RE\n  });\n  const GCODE_CODE = [\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    hljs.COMMENT(/\\(/, /\\)/),\n    NUMBER,\n    hljs.inherit(hljs.APOS_STRING_MODE, {\n      illegal: null\n    }),\n    hljs.inherit(hljs.QUOTE_STRING_MODE, {\n      illegal: null\n    }),\n    {\n      className: 'name',\n      begin: '([G])([0-9]+\\\\.?[0-9]?)'\n    },\n    {\n      className: 'name',\n      begin: '([M])([0-9]+\\\\.?[0-9]?)'\n    },\n    {\n      className: 'attr',\n      begin: '(VC|VS|#)',\n      end: '(\\\\d+)'\n    },\n    {\n      className: 'attr',\n      begin: '(VZOFX|VZOFY|VZOFZ)'\n    },\n    {\n      className: 'built_in',\n      begin: '(ATAN|ABS|ACOS|ASIN|SIN|COS|EXP|FIX|FUP|ROUND|LN|TAN)(\\\\[)',\n      contains: [\n        NUMBER\n      ],\n      end: '\\\\]'\n    },\n    {\n      className: 'symbol',\n      variants: [\n        {\n          begin: 'N',\n          end: '\\\\d+',\n          illegal: '\\\\W'\n        }\n      ]\n    }\n  ];\n\n  return {\n    name: 'G-code (ISO 6983)',\n    aliases: ['nc'],\n    // Some implementations (CNC controls) of G-code are interoperable with uppercase and lowercase letters seamlessly.\n    // However, most prefer all uppercase and uppercase is customary.\n    case_insensitive: true,\n    keywords: GCODE_KEYWORDS,\n    contains: [\n      {\n        className: 'meta',\n        begin: GCODE_CLOSE_RE\n      },\n      GCODE_START\n    ].concat(GCODE_CODE)\n  };\n}\n\nmodule.exports = gcode;\n","function emitWarning() {\n    if (!emitWarning.warned) {\n      emitWarning.warned = true;\n      console.log(\n        'Deprecation (warning): Using file extension in specifier is deprecated, use \"highlight.js/lib/languages/gcode\" instead of \"highlight.js/lib/languages/gcode.js\"'\n      );\n    }\n  }\n  emitWarning();\n    module.exports = require('./gcode.js');"],"sourceRoot":""}