{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/elm.js"],"names":["elm","hljs","COMMENT","variants","contains","CONSTRUCTOR","className","begin","relevance","LIST","end","illegal","RECORD","CHARACTER","KEYWORDS","name","keywords","beginKeywords","C_NUMBER_MODE","QUOTE_STRING_MODE","inherit","TITLE_MODE","module","exports"],"mappings":"iGAQA,SAASA,EAAIC,GACX,MAAMC,EAAU,CACdC,SAAU,CACRF,EAAKC,QAAQ,KAAM,KACnBD,EAAKC,QACH,MACA,MACA,CACEE,SAAU,CAAC,YAMbC,EAAc,CAClBC,UAAW,OACXC,MAAO,kBACPC,UAAW,GAGPC,EAAO,CACXF,MAAO,MACPG,IAAK,MACLC,QAAS,IACTP,SAAU,CACR,CACEE,UAAW,OACXC,MAAO,0CAETL,IAIEU,EAAS,CACbL,MAAO,KACPG,IAAK,KACLN,SAAUK,EAAKL,UAGXS,EAAY,CAChBP,UAAW,SACXC,MAAO,UACPG,IAAK,IACLC,QAAS,KAGLG,EAAW,CACf,MACA,KACA,KACA,OACA,OACA,OACA,KACA,QACA,SACA,SACA,WACA,OACA,QACA,KACA,QACA,SACA,SACA,OACA,SACA,UACA,gBAGF,MAAO,CACLC,KAAM,MACNC,SAAUF,EACVV,SAAU,CAIR,CACEa,cAAe,qBACfP,IAAK,WACLM,SAAU,yDACVZ,SAAU,CACRK,EACAP,GAEFS,QAAS,YAEX,CACEJ,MAAO,SACPG,IAAK,IACLM,SAAU,qBACVZ,SAAU,CACRK,EACAP,GAEFS,QAAS,YAEX,CACEJ,MAAO,OACPG,IAAK,IACLM,SAAU,aACVZ,SAAU,CACRC,EACAI,EACAG,EACAV,IAGJ,CACEe,cAAe,sBACfP,IAAK,IACLN,SAAU,CACRH,EAAKiB,cACLhB,IAGJ,CACEK,MAAO,OACPG,IAAK,IACLM,SAAU,OACVZ,SAAU,CAACF,IAIbW,EACAZ,EAAKkB,kBACLlB,EAAKiB,cACLb,EACAJ,EAAKmB,QAAQnB,EAAKoB,WAAY,CAC5Bd,MAAO,mBAETL,EAEA,CACEK,MAAO,UAGXI,QAAS,KAIbW,EAAOC,QAAUvB","file":"js/chunk-2d0c736d.2726e8e9.js","sourcesContent":["/*\nLanguage: Elm\nAuthor: Janis Voigtlaender <janis.voigtlaender@gmail.com>\nWebsite: https://elm-lang.org\nCategory: functional\n*/\n\n/** @type LanguageFn */\nfunction elm(hljs) {\n  const COMMENT = {\n    variants: [\n      hljs.COMMENT('--', '$'),\n      hljs.COMMENT(\n        /\\{-/,\n        /-\\}/,\n        {\n          contains: ['self']\n        }\n      )\n    ]\n  };\n\n  const CONSTRUCTOR = {\n    className: 'type',\n    begin: '\\\\b[A-Z][\\\\w\\']*', // TODO: other constructors (built-in, infix).\n    relevance: 0\n  };\n\n  const LIST = {\n    begin: '\\\\(',\n    end: '\\\\)',\n    illegal: '\"',\n    contains: [\n      {\n        className: 'type',\n        begin: '\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?'\n      },\n      COMMENT\n    ]\n  };\n\n  const RECORD = {\n    begin: /\\{/,\n    end: /\\}/,\n    contains: LIST.contains\n  };\n\n  const CHARACTER = {\n    className: 'string',\n    begin: '\\'\\\\\\\\?.',\n    end: '\\'',\n    illegal: '.'\n  };\n\n  const KEYWORDS = [\n    \"let\",\n    \"in\",\n    \"if\",\n    \"then\",\n    \"else\",\n    \"case\",\n    \"of\",\n    \"where\",\n    \"module\",\n    \"import\",\n    \"exposing\",\n    \"type\",\n    \"alias\",\n    \"as\",\n    \"infix\",\n    \"infixl\",\n    \"infixr\",\n    \"port\",\n    \"effect\",\n    \"command\",\n    \"subscription\"\n  ];\n\n  return {\n    name: 'Elm',\n    keywords: KEYWORDS,\n    contains: [\n\n      // Top-level constructions.\n\n      {\n        beginKeywords: 'port effect module',\n        end: 'exposing',\n        keywords: 'port effect module where command subscription exposing',\n        contains: [\n          LIST,\n          COMMENT\n        ],\n        illegal: '\\\\W\\\\.|;'\n      },\n      {\n        begin: 'import',\n        end: '$',\n        keywords: 'import as exposing',\n        contains: [\n          LIST,\n          COMMENT\n        ],\n        illegal: '\\\\W\\\\.|;'\n      },\n      {\n        begin: 'type',\n        end: '$',\n        keywords: 'type alias',\n        contains: [\n          CONSTRUCTOR,\n          LIST,\n          RECORD,\n          COMMENT\n        ]\n      },\n      {\n        beginKeywords: 'infix infixl infixr',\n        end: '$',\n        contains: [\n          hljs.C_NUMBER_MODE,\n          COMMENT\n        ]\n      },\n      {\n        begin: 'port',\n        end: '$',\n        keywords: 'port',\n        contains: [COMMENT]\n      },\n\n      // Literals and names.\n      CHARACTER,\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n      CONSTRUCTOR,\n      hljs.inherit(hljs.TITLE_MODE, {\n        begin: '^[_a-z][\\\\w\\']*'\n      }),\n      COMMENT,\n\n      { // No markup, relevance booster\n        begin: '->|<-'\n      }\n    ],\n    illegal: /;/\n  };\n}\n\nmodule.exports = elm;\n"],"sourceRoot":""}